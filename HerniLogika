package models;

import java.awt.Graphics;
import java.util.Random;

public class HerniLogika {
    int velikostPole;
    int velikostPlatna;
    int pocetMin;
    Policko[][] herniPole;
    
    public HerniLogika(int velikostPlatna) {
        this.velikostPole = 10;
        this.pocetMin = 10;
        this.herniPole = new Policko[velikostPole][velikostPole];
        this.velikostPlatna = velikostPlatna;
        naplnPole();
    }
    public void leveKliknuti(int x, int y) {
        x = x/(velikostPlatna/velikostPole);y = y/(velikostPlatna/velikostPole);
        if(herniPole[x][y].isOznaceno() || herniPole[x][y].isOdhaleno()) return;
        if(0 < herniPole[x][y].getHodnota() && herniPole[x][y].getHodnota() < 9) {
            herniPole[x][y].setOdhaleno(true);
            return;
        }
        if(herniPole[x][y].getHodnota() == 9) {
            triggerProhra(x,y);
            return;
        }
        floodFill(x,y);
    }
    public void floodFill(int x, int y) {
        herniPole[x][y].setOdhaleno(true);
        if(x-1 >= 0 && y-1 >= 0 && herniPole[x-1][y-1].getHodnota() > 0 && herniPole[x-1][y-1].getHodnota() < 9) {
            herniPole[x-1][y-1].setOdhaleno(true);
        }
        if(x-1 >= 0 && y+1 < velikostPole && herniPole[x-1][y+1].getHodnota() > 0 && herniPole[x-1][y+1].getHodnota() < 9) {
            herniPole[x-1][y+1].setOdhaleno(true);
        }
        if(x+1 < velikostPole && y+1 < velikostPole && herniPole[x+1][y+1].getHodnota() > 0 && herniPole[x+1][y+1].getHodnota() < 9) {
            herniPole[x+1][y+1].setOdhaleno(true);
        }
        if(x+1 < velikostPole && y-1 >= 0 && herniPole[x+1][y-1].getHodnota() > 0 && herniPole[x+1][y-1].getHodnota() < 9) {
            herniPole[x+1][y-1].setOdhaleno(true);
        }
        
        if(x-1 >= 0 && !herniPole[x-1][y].isOdhaleno()) {
            if(herniPole[x-1][y].getHodnota() == 0) {
                floodFill(x-1,y);
            }else {
                herniPole[x-1][y].setOdhaleno(true);
            }
        }
        if(y-1 >= 0 && !herniPole[x][y-1].isOdhaleno()) {
            if(herniPole[x][y-1].getHodnota() == 0) {
                floodFill(x,y-1);   
            }else {
                herniPole[x][y-1].setOdhaleno(true);
            }
        }
        if(x+1 < velikostPole && !herniPole[x+1][y].isOdhaleno()) {
            if(herniPole[x+1][y].getHodnota() == 0) {
                floodFill(x+1,y);
            }else {
                herniPole[x+1][y].setOdhaleno(true);
            }
        }
        if(y+1 < velikostPole && !herniPole[x][y+1].isOdhaleno()) {
            if(herniPole[x][y+1].getHodnota() == 0) {
                floodFill(x,y+1);
            }else {
                herniPole[x][y+1].setOdhaleno(true);
            }
        }
    }
    public void triggerProhra(int x, int y) {
        herniPole[x][y].setSelectedFuckUp(true);
        for (int i = 0; i < velikostPole; i++) {
            for (int j = 0; j < velikostPole; j++) {
                herniPole[i][j].setOdhaleno(true);
            }
        }
    }
    public void praveKliknuti(int x, int y) {
        x = x/(velikostPlatna/velikostPole);y = y/(velikostPlatna/velikostPole);
        if(herniPole[x][y].isOdhaleno()) return;
        herniPole[x][y].setOznaceno(!herniPole[x][y].isOznaceno());
        System.out.println("jjds");
    } 
    public void naplnPole() {
        for (int i = 0; i < velikostPole; i++) {
            for (int j = 0; j < velikostPole; j++) {
                herniPole[i][j] = new Policko(0, false, false);
            }
        }
        
        Random r = new Random();
        for (int i = 0; i < pocetMin; i++) {
            int x = r.nextInt(velikostPole);
            int y = r.nextInt(velikostPole);
            while(herniPole[x][y].getHodnota() == 9) {
                x = r.nextInt(velikostPole);
                y = r.nextInt(velikostPole);
            }    
            herniPole[x][y].setHodnota(9);
        }
        for (int i = 0; i < velikostPole; i++) {
            for (int j = 0; j < velikostPole; j++) {
                if(herniPole[i][j].getHodnota() != 9) {
                    herniPole[i][j].setHodnota(getNeighbours(i,j));
                }
            }
        }
    }
    public int getNeighbours(int i, int j) {
        int counter = 0;
        for (int k = 0; k < 3; k++) {
            if (i-1 >= 0 && j-1+k >= 0 && j-1+k < velikostPole) {
                if (herniPole[i-1][j-1+k].getHodnota() == 9) {
                    counter++;
                }
            }
            if (i+1 < velikostPole && j-1+k >= 0 && j-1+k < velikostPole) {
                if (herniPole[i+1][j-1+k].getHodnota() == 9) {
                    counter++;
                }
            }
        }
        if(j-1 >= 0 && herniPole[i][j-1].getHodnota() == 9) counter++;
        if(j+1 < velikostPole && herniPole[i][j+1].getHodnota() == 9) counter++;
        return counter;
    }
    public void vykresliPole(Graphics g) {
        for (int i = 0; i < velikostPole; i++) {
            for (int j = 0; j < velikostPole; j++) {
                this.herniPole[i][j].vykresliSe(g,i*velikostPlatna/velikostPole,j*velikostPlatna/velikostPole,velikostPlatna/velikostPole);
            }
        }
    }
    public void vypisPole() {
        for (int i = 0; i < velikostPole; i++) {
            for (int j = 0; j < velikostPole; j++) {
                System.out.print(herniPole[i][j].getHodnota()+" ");
            }
            System.out.println("");
        }
    }
}
